services:
  caddy:
    image: caddy:2.9
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./site:/srv
      - caddy_data:/data
      - caddy_config:/config
  db:
    image: postgres:17
    healthcheck:
      test: ["CMD", "pg_isready", "--username=postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: avoidit
      POSTGRES_USER: postgres
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT:-5432}
    volumes:
      - db_data:/var/lib/postgresql-avoidit/data

  web:
    image: ${WEB_IMAGE:-ghcr.io/shawnonthenet/avoidit:latest}
    pull_policy: always
    deploy:
      replicas: ${WEB_REPLICAS:-1}
      restart_policy:
        max_attempts: ${MAX_ATTEMPTS:-3}
        condition: on-failure
        delay: 5s
        window: 120s
      update_config:
        parallelism: 1
        order: start-first
        delay: 5s
        failure_action: rollback
      rollback_config:
        parallelism: 0
    env_file:
      - .env
    ports:
      - 4000:4000
    depends_on:
      - db
    command: >
      bash -c "bin/migrate && bin/server"
volumes:
  db_data:
  caddy_data:
  caddy_config: